plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.5.21'
    id "org.jetbrains.dokka" version "1.5.0"
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url 'https://maven.hackery.site/'
    }
    maven {
        url 'https://auoeke.jfrog.io/artifactory/maven'
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url 'https://maven.concern.i.ng'
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    include(implementation("user11681:reflect:1.12.0"))
    include(implementation("net.gudenau.lib:unsafe:1.4.3"))
    include(implementation("sschr15.tools:better-paths:1.1.0"))

    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
    include api("codes.som.anthony:koffee:8.0.2")
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
        duplicatesStrategy DuplicatesStrategy.EXCLUDE
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
        duplicatesStrategy DuplicatesStrategy.EXCLUDE
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
        maven {
            url 'https://maven.concern.i.ng/releases'
            credentials {
                username System.getenv("MAVEN_USER")
                password System.getenv("MAVEN_PASS")
            }
        }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "16"
        freeCompilerArgs = ["-Xopt-in=kotlin.RequiresOptIn"]
    }
}

dokkaHtml {
    dokkaSourceSets {
        configureEach {
            externalDocumentationLink {
                // ASM
                url = URL("https://asm.ow2.io/javadoc/")
            }
            externalDocumentationLink {
                // Mixin
                url = URL("https://docs.concern.i.ng/mixin/")
            }
        }
    }
}
